<div class="container mt-2">
    {{#if isInRoom}}
        <div class="row" style="height: 90vh;">
            <div class="col-3" style="background-color: #d9d9d9;">
                <div class="text-center">Игроки:</div><hr>
                <ul class="list-group players-list list-group-numbered">
                </ul>
                <hr>
                <div class="text-center">Комната:</div><hr>
                <div class="row g-3 align-items-center roomcode-block">
                    <div class="col-4 px-0">
                        <label for="roomCode" class="col-form-label">Код комнаты:</label>
                    </div>
                    <div class="col-7 px-1">
                        <input type="password" id="roomCode" class="form-control form-control-sm" aria-describedby="passwordHelpInline" value="{{roomCode}}" readonly>
                    </div>
                    <div class="col-1 px-0" title="Скрыть / показать код">
                        <button type="button" id="toggleRoomCode" class="btn btn-sm btn-warning"><i class="fa fa-unlock-alt" aria-hidden="true"></i></button>
                    </div>
                </div>
                <div class="row g-3 align-items-center fieldsize-block">
                    <div class="col-9 px-0">
                        <label for="fieldSize" class="col-form-label">Размер поля:</label>
                    </div>
                    <div class="col-3 px-1">
                        <input type="number" id="fieldSize" class="form-control form-control-sm changeable-field" {{#unless isPlayerHost}}readonly{{/unless}}>
                    </div>
                </div>
                <div class="row g-3 align-items-center bombscount-block">
                    <div class="col-9 px-0">
                        <label for="bombsCount" class="col-form-label">Количество бомб:</label>
                    </div>
                    <div class="col-3 px-1">
                        <input type="number" id="bombsCount" class="form-control form-control-sm changeable-field" {{#unless isPlayerHost}}readonly{{/unless}}>
                    </div>
                </div>
                <div class="row g-3 align-items-center wingoal-block">
                    <div class="col-9 px-0">
                        <label for="winGoal" class="col-form-label">Количество бомб для победы:</label>
                    </div>
                    <div class="col-3 px-1">
                        <input type="number" id="winGoal" class="form-control form-control-sm changeable-field" {{#unless isPlayerHost}}readonly{{/unless}}>
                    </div>
                </div>
                <div class="row g-3 align-items-center flags-block">
                    <div class="col-9 px-0">
                        <label for="flags" class="col-form-label">Количество флажков:</label>
                    </div>
                    <div class="col-3 px-1">
                        <input type="number" id="flags" class="form-control form-control-sm changeable-field" {{#unless isPlayerHost}}readonly{{/unless}}>
                    </div>
                </div>
                <hr>
                {{#if isPlayerHost}}
                <div class="row g-3 align-items-center roomsets-block">
                    <div class="col-6 px-1">
                        <button type="button" id="deleteRoom" class="btn btn-sm btn-danger w-100">Удалить комнату</button>
                    </div>
                    <div class="col-6 px-1">
                        <button type="button" id="startGame" class="btn btn-sm btn-primary w-100 d-none">Начать игру</button>
                    </div>
                </div>
                {{/if}}
            </div>
            <div class="col-9">
                <div class="status-players text-center mt-2"  {{#if isPlayerHost}}data-host="1"{{/if}}>
                    <span class="badge bg-info text-dark" style="width:80%;height:30px;padding-top:10px;">Ожидание других игроков...</span>
                </div>
                <div class="row fields-block">
                </div>
            </div>
        </div>
        
    {{else}}
        <div class="" style="padding-left:10rem;padding-right:10rem;padding-top:10rem;">
            <form action="room_login" method="post">
                <div class="form-group">
                    <label for="roomCode">Код комнаты</label>
                    <input type="text" name="roomCode" class="form-control form-control-sm" id="roomCode" aria-describedby="roomCode" placeholder="Напишите код комнаты">
                    <small id="roomCodeHelp" class="form-text text-muted">Оставьте поле пустым, чтобы создать комнату.</small>
                </div>
                <div class="form-group">
                    <label for="playerName">Имя игрока</label>
                    <input type="text" name="playerName" class="form-control form-control-sm" id="playerName" aria-describedby="playerName" placeholder="Напишите своё имя" required>
                </div>
                <button type="submit" class="btn btn-sm btn-primary mt-1">Поехали</button>
            </form>
        </div>
    {{/if}}
</div>


{{#if isInRoom}}
    <script type="text/javascript">

        $(document).bind("contextmenu",function(e){
            return false;
        });

        $(document).ready(() => {
            let waitingPlayersStatus = 1;
            let waitingGameStatus = 1;
            let gameCycleStatus = 0;
            let movePlayerStatus = -1;

            function WaitingPlayers() {
                $.ajax({
                    type: "GET",
                    url: "/get_players_in_room",
                    async: true,
                    success: function(data) {
                        if (data.players && data.players.length > 0) {
                            let htmlStr = "";
                            data.players.forEach(player => {
                                htmlStr += `
                                    <li class="list-group-item bg-dark text-light d-flex justify-content-between align-items-start player-info ${player.current ? 'active' : ''}" data-id="${player.id}">
                                        <div class="player-name text-light">${player.name}</div>
                                        <div>
                                            <span class="player-flags badge bg-primary rounded-pill" title="количество флажков">0</span>
                                            <span class="player-bombs badge bg-danger rounded-pill" title="кол-во взорванных бомб на территории">0</span>
                                        </div>
                                    </li>
                                `;
                            });
                            $('.players-list').html(htmlStr);
                        }
                        if (data.status && data.status == "ok") {
                            if ($('.status-players').attr('data-host') == '1') {
                                $('.status-players > span').text('');
                            } else {
                                $('.status-players > span').text('Ожидание старта игры от хоста...');
                            }
                            $('#startGame').removeClass('d-none');
                            waitingPlayersStatus = 0;
                        }
                    },
                    error: function(err) {},
                    complete: function() {
                        if (waitingPlayersStatus == 1) {
                            setTimeout(() => {WaitingPlayers();}, 1000);
                        }
                    },
                });
            } WaitingPlayers();

            function WaitingGame() {
                $.ajax({
                    type: "GET",
                    url: "/get_room_status",
                    async: true,
                    success: function(data) {
                        if (data.data) {
                            $('#fieldSize').val(data.data.fieldSize);
                            $('#bombsCount').val(data.data.bombsCount);
                            $('#winGoal').val(data.data.winGoal);
                            $('#flags').val(data.data.flags);
                        }
                        if (data.status && data.status == "ok") {
                            $('.status-players > span').text('');
                            waitingGameStatus = 0;
                            gameCycleStatus = 1;
                            GameCycle();
                        }
                        if (data.status && data.status == "err") {
                            document.location.reload(false);
                        }
                    },
                    error: function(err) {},
                    complete: function() {
                        if (waitingGameStatus == 1) {
                            setTimeout(() => {WaitingGame();}, 3000);
                        }
                    },
                });
            } WaitingGame();

            function RenderField(fields, playerInd) {
                let htmlStr = `
                    <div class="col-6" data-your-field="1">
                        <div class="text-center">Ваше поле</div>
                        <hr>
                        <div class="fields-container">
                `;
                let field = fields[playerInd].watchField;
                for (let i = 0; i < field.length; i++) {
                    htmlStr += `
                        <div class="field-row">
                    `;
                    for (let j = 0; j < field[i].length; j++) {
                        let val = ""; let classCell = "";
                        if (field[i][j] == -3) {val = '-'; classCell = "white";}
                        if (field[i][j] == -2) {val = 'x'; classCell = "red";}
                        if (field[i][j] == -1) {val = 'f'; classCell = "blue";}
                        if (field[i][j] > 0) {val = `${field[i][j]}`; classCell = "white";}
                        htmlStr += `
                            <div class="cell-container ${classCell}" data-cell="${i}_${j}"><div class="cell-element text-uppercase text-center">${val}</div></div>
                        `;
                    }
                    htmlStr += `
                        </div>
                    `;
                }
                htmlStr += `
                        </div>
                    </div>
                `;
                for (let k = 0; k < fields.length; k++) {
                    $($('.players-list').find(`.player-flags`)[k]).text(fields[k].usedFlags);
                    $($('.players-list').find(`.player-bombs`)[k]).text(fields[k].explodedBombs);

                    if (k != playerInd) {
                        htmlStr += `
                            <div class="col-6" data-your-field="0">
                                <div class="text-center">Поле противника</div>
                                <hr>
                                <div class="fields-container">
                        `;
                        field = fields[k].watchField;
                        for (let i = 0; i < field.length; i++) {
                            htmlStr += `
                                <div class="field-row">
                            `;
                            for (let j = 0; j < field[i].length; j++) {
                                let val = ""; let classCell = "";
                                if (field[i][j] == -3) {val = '-'; classCell = "white";}
                                if (field[i][j] == -2) {val = 'x'; classCell = "red";}
                                if (field[i][j] == -1) {val = 'f'; classCell = "blue";}
                                if (field[i][j] > 0) {val = `${field[i][j]}`; classCell = "white";}
                                htmlStr += `
                                    <div class="cell-container ${classCell}" data-cell="${i}_${j}"><div class="cell-element text-uppercase text-center">${val}</div></div>
                                `;
                            }
                            htmlStr += `
                                </div>
                            `;
                        }
                        htmlStr += `
                                </div>
                            </div>
                        `;
                    }
                }
                $('.fields-block').html(htmlStr);
            }

            function GameCycle() {
                // $('.status-players > span').text('');
                $('#startGame').addClass('d-none');
                $.ajax({
                    type: "GET",
                    url: "/get_game",
                    async: true,
                    success: function(data) {
                        if (data.status == "err") {
                            document.location.reload(false);
                        }
                        if (data.status == "ok") {
                            if (movePlayerStatus != data.playerMove) {
                                movePlayerStatus = data.playerMove;
                                $('.status-players > span').text(movePlayerStatus != 1 ? "Ожидайте... Ходит ваш оппонент." : "Ваш ход. :)");
                            }
                            RenderField(data.fields, data.playerInd);
                        }
                        console.log(data.loseId)
                        if (data.loseId) {
                            gameCycleStatus = 0;
                            let name = $('.players-list').find(`.player-info[data-id="${data.loseId}"]`).find('.player-name').text();
                            alert(`Конец игры. Проиграл игрок "${name}"`);
                        }
                    },
                    error: function(err) {},
                    complete: function() {
                        if (gameCycleStatus == 1) {
                            setTimeout(() => {GameCycle();}, 1000);
                        }
                    },
                });
            }

            // ------------------------------------------------------------------
            
            $('#toggleRoomCode').on('click', (e) => {
                let isTypePass = $('#roomCode').attr('type') == "password";
                $('#roomCode').attr('type', isTypePass ? "text" : "password");
            });

            $('.changeable-field').on('change', (e) => {
                let id = $(e.currentTarget).attr('id');
                let val = $(e.currentTarget).val();
                // post ajax
                $.ajax({
                    type: "POST",
                    url: "/set_room_vars",
                    data: {id, val},
                    async: true,
                    success: function(data) {},
                    error: function(err) {},
                    complete: function() {},
                });
            });

            $('#deleteRoom').on('click', (e) => {
                $.ajax({
                    type: "POST",
                    url: "/delete_room",
                    data: {},
                    async: true,
                    success: function(data) {},
                    error: function(err) {},
                    complete: function() {
                        document.location.reload(false);
                    },
                });
            });

            $('#startGame').on('click', (e) => {
                $.ajax({
                    type: "POST",
                    url: "/start_game",
                    data: {},
                    async: true,
                    success: function(data) {
                        if (data == "ok") {
                            $('.changeable-field').attr('readonly', 'readonly');
                            $('#startGame').addClass('d-none');
                        }
                    },
                    error: function(err) {},
                    complete: function() {},
                });
            });

            $('.fields-block').on('mouseover', '.cell-container', (e) => {
                let cell = $(e.currentTarget).attr('data-cell');
                $('.fields-block').find(`.cell-container`).removeClass('c-hover');
                $('.fields-block').find(`.cell-container[data-cell=${cell}]`).addClass('c-hover');
            });

            $('.fields-block').on('mousedown', '.cell-container', (e) => {
                if (movePlayerStatus != 1) {return;}
                let cellId = $(e.currentTarget).attr('data-cell'); let mode = -1;
                switch (e.which) {
                    case 1:
                        mode = 0; // open cell
                        break;
                    case 3:
                        let parent = $(e.currentTarget).parent().parent().parent();
                        if ($(parent).attr('data-your-field') == '1') {
                            mode = 1; // set flag
                        }
                        break;
                    default:
                        break;
                }
                if (mode < 0) {return;}
                $.ajax({
                    type: "POST",
                    url: "/change_cell",
                    data: {id: cellId, mode},
                    async: true,
                    success: function(data) {
                        if (data.status == "ok") {}
                    },
                    error: function(err) {},
                    complete: function() {},
                });
            });

        });
    </script>
{{/if}}
