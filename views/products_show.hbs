<h4 style="margin-top: 1rem;">Список всех продуктов(ингредиенты, блюда...)</h4>

{{#if products.length}}
<ul>
    <li class="product">
        <label>
            <span>Выбрано</span>
            <span>Название</span>
            <span>Субъект РФ</span>
            <span>Вид кухни</span>
            <span></span>
        </label>
    </li>
    <form action="/test_complete" method="POST" id="showing_products">
    {{#each products}}
        <li class="product">
            <label>
                <input type="checkbox" value="{{_id}}" name="checked">
                <span>{{ title }}</span>
                <span>{{ region }}</span>
                <span>{{ description }}</span>

                <button type="button" class="btn btn-outline-dark btn-edit-product" id="edit_product_{{@index}}" data-toggle="modal" data-target="#editProductModal" value="{{_id}}">Изменить</button>

                <input type="hidden" value="{{_id}}" name="id">
            </label>
        </li>
    {{/each}}
    <button type="button" class="btn btn-outline-dark" id="create_product" data-toggle="modal" data-target="#createProductModal">Создать</button>
    <button type="reset" class="btn btn-outline-dark" id="delete_products">Удалить</button>
    </form>
</ul>
{{else}}
<p>[ В БД нет продуктов ]</p>
<button type="button" class="btn btn-outline-dark" id="create_product" data-toggle="modal" data-target="#createProductModal">Создать</button>
{{/if}}

<!-- Modals -->
<!-- Создание продукта -->
<div class="modal fade" id="createProductModal" tabindex="-1" role="dialog" aria-labelledby="createProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createProductModalLabel">Создание продукта</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="/product_create" method="POST" id="creatingProduct">
                    <div class="form-group">
                        <label for="typeOfProduct">Тип</label>
                        <select class="form-control" id="typeOfProduct" name="type">
                            <option value="product">Продукт</option>
                            <option value="dish">Блюдо</option>
                        </select>
                    </div>
                    <div class="form-group row">
                        <div class="col">
                            <label for="nameOfProduct">Название</label>
                            <input type="text" class="form-control" id="nameOfProduct" name="title" required>
                        </div>
                        <div class="col-md-2">
                            <label for="iconProduct">ВИД</label>
                            <div class="btn-group dropleft" id="iconProduct">
                                <input type="hidden" value="" name="icon_path" id="iconPathProduct">
                                <a class="btn btn-sm btn-outline-warning dropdown-toggle" id="dropdownIcons" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img src="" alt="" id="showICON"/> 
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownIcons">
                                    {{#each dataIcons}}
                                    <a class="dropdown-item" id="{{ id }}"><img src="{{ path }}" alt=""/> {{ title }}</a>
                                    {{/each}}
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="regOfProduct">Субъект РФ</label>
                        <input type="text" class="form-control" id="regOfProduct" name="region" aria-describedby="regHelp">
                        <small id="regHelp" class="form-text text-muted"></small>
                    </div>
                    <div class="form-group">
                        <label for="cookTypeOfProduct">Описание</label>
                        <input type="text" class="form-control" id="cookTypeOfProduct" name="description" aria-describedby="cookTypeHelp">
                        <small id="cookTypeHelp" class="form-text text-muted"></small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                <button type="submit" class="btn btn-primary" form="creatingProduct">Сохранить</button>
            </div>
        </div>
    </div>
</div>
<!-- Изменение продукта -->
<div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Укажите точку:</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="map" style="width: 700px; height: 400px; padding: 0; margin: 0;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveCoords">Сохранить</button>
            </div>
        </div>
    </div>
</div>

<script src="/jquery-3.5.1.js"></script>
<script type="text/javascript">
    var coords = [0, 0];
    var firstGeoObject = "";
    ymaps.ready(init);

    function init() {
        let myPlacemark;
        let myMap = new ymaps.Map("map", {
            center: [55.76, 37.64],
            zoom: 7
        });

        myMap.events.add('click', function (e) {
            coords = e.get('coords');
            if (myPlacemark) {
                myPlacemark.geometry.setCoordinates(coords);
            }
            else {
                myPlacemark = createPlacemark(coords);
                myMap.geoObjects.add(myPlacemark);
                myPlacemark.events.add('dragend', function () {
                    getAddress(myPlacemark.geometry.getCoordinates());
                });
            }
            getAddress(coords);
        });

        function createPlacemark(coords) {
            return new ymaps.Placemark(coords, {
                iconCaption: 'поиск...'
            }, {
                preset: 'islands#violetDotIconWithCaption',
                draggable: true
            });
        }

        function getAddress(coords) {
            myPlacemark.properties.set('iconCaption', 'поиск...');
            ymaps.geocode(coords).then(function (res) {
                firstGeoObject = res.geoObjects.get(0);
                myPlacemark.properties.set({
                    iconCaption: "Точка выбрана.",
                    balloonContent: firstGeoObject.getAddressLine()
                });
            });
        }
    }
</script>
<script>
    const buttonDeleteProduct = document.getElementById('delete_products');
    if (typeof(buttonDeleteProduct) != 'undefined' && buttonDeleteProduct != null) {
        buttonDeleteProduct.addEventListener('click', async function(e) {
            let data = $('#showing_products').serialize();
            try {
                const response = await fetch('/product_delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: data
                });
                const status = await response.ok;
                window.location.reload(false);
                return;
            } catch (error) {
                console.error('error: ', error);
            }
        });
    }

    let idToEdit = "";
    const buttonsEditProduct = document.getElementsByClassName('btn-edit-product');
    for (let i=0; i<buttonsEditProduct.length; i++){
        buttonsEditProduct[i].addEventListener('click', async function(e) { 
            idToEdit = $(this).prop('value');
        });
    }
    $('#saveCoords').click(async function() {

        let region = "";
        if (firstGeoObject != "") {
            const arrayOfStrings = firstGeoObject.getAddressLine().split(", ");
            if (arrayOfStrings.length > 1) {region += arrayOfStrings[0] + ", " + arrayOfStrings[1];}
            else {region = arrayOfStrings[0];}
        }

        data = {
            id: idToEdit,
            coordinates: coords,
            region: region
        }
        try {
            const response = await fetch('/product_edit', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data) 
            });
            const status = await response.ok;
            window.location.reload(false);
            return;
        } catch (error) {
            console.error('error: ', error);
        }
    });

    $( document ).ready(function() {
        if ($('#typeOfProduct').val() == "product") {
            $('#regHelp').text("Введите регион, в котором находится продукт.");
            $('#cookTypeHelp').text("Введите тип кухни, к которому относится продукт.");
        } else {
            $('#regHelp').text("Введите регион, в котором находится блюдо.");
            $('#cookTypeHelp').text("Введите тип кухни, к которому относится блюдо.");
        }
        $('#typeOfProduct').change(function() {
            if ($('#typeOfProduct').val() == "product") {
                $('#regHelp').text("Введите регион, в котором находится продукт.");
                $('#cookTypeHelp').text("Введите тип кухни, к которому относится продукт.");
            } else {
                $('#regHelp').text("Введите регион, в котором находится блюдо.");
                $('#cookTypeHelp').text("Введите тип кухни, к которому относится блюдо.");
            }
        });

        $('#showICON').attr("src", $('#classOfProduct').val());
        $('#classOfProduct').change(function() {
            $('#showICON').attr("src", $('#classOfProduct').val());
        });
        let path = $('.dropdown-menu a:first-child').find('img').attr("src");
        $('#showICON').attr("src", path);
        $('#iconPathProduct').val(path);
        $('.dropdown-menu a').click(function() {
            let title = $(this).text();
            let value = $(this).find('img').attr("src");
            $('#iconPathProduct').val(value);
            $('#showICON').attr("src", value);
        });
    });
</script>